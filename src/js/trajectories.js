const WEAK_THRESHOLD = 0.1;

export const trajectories = {
  strong: {
    straight: {
      translation: [
        [0.00, -0.00, -0.00, -0.00, -0.01, -0.01, -0.02, -0.03, -0.03, -0.03, -0.03, -0.03, -0.02, 0.00, 0.03, 0.06, 0.11, 0.17, 0.25, 0.36, 0.50, 0.69, 0.92, 1.20, 1.55, 1.95, 2.39, 2.87],
        [0.00, -0.01, -0.03, -0.04, -0.03, -0.00, 0.04, 0.10, 0.17, 0.24, 0.31, 0.37, 0.42, 0.46, 0.48, 0.48, 0.46, 0.42, 0.35, 0.27, 0.16, 0.02, -0.15, -0.36, -0.61, -0.91, -1.27, -1.68],
        [0.00, 1.05, 2.07, 3.05, 4.00, 4.91, 5.78, 6.62, 7.41, 8.16, 8.88, 9.56, 10.21, 10.83, 11.41, 11.97, 12.51, 13.03, 13.52, 14.00, 14.46, 14.89, 15.29, 15.66, 15.97, 16.21, 16.38, 16.46],
      ], rotation: [
        [0.00, -0.07, -0.14, -0.20, -0.25, -0.31, -0.35, -0.40, -0.44, -0.47, -0.51, -0.54, -0.56, -0.59, -0.61, -0.63, -0.65, -0.67, -0.69, -0.71, -0.73, -0.75, -0.77, -0.79, -0.80, -0.81, -0.82, -0.82],
        [0.00, 21.47, 42.90, 64.31, 85.70, 107.06, 128.40, 149.71, 171.01, 192.29, 213.56, 234.81, 256.05, 277.28, 298.50, 319.71, 340.91, 362.11, 383.29, 404.47, 425.65, 446.83, 468.00, 489.17, 510.33, 531.50, 552.67, 573.82],
        [0.00, 0.01, 0.01, 0.01, 0.01, 0.00, -0.00, -0.01, -0.02, -0.03, -0.04, -0.05, -0.06, -0.07, -0.08, -0.10, -0.11, -0.12, -0.13, -0.14, -0.14, -0.14, -0.14, -0.12, -0.10, -0.07, -0.04, 0.00],
      ]
    },
    tiltLeft: {
      translation: [
        [0.00, -0.01, -0.04, -0.09, -0.17, -0.28, -0.41, -0.56, -0.74, -0.93, -1.14, -1.37, -1.62, -1.88, -2.15, -2.45, -2.76, -3.08, -3.43, -3.80, -4.20, -4.62, -5.07, -5.55, -6.05, -6.58, -7.12, -7.68],
        [0.00, -0.01, -0.04, -0.05, -0.06, -0.04, -0.02, 0.02, 0.06, 0.11, 0.15, 0.18, 0.21, 0.22, 0.22, 0.20, 0.16, 0.10, 0.02, -0.09, -0.21, -0.36, -0.52, -0.71, -0.93, -1.16, -1.41, -1.69],
        [0.00, 1.05, 2.07, 3.05, 4.00, 4.91, 5.78, 6.60, 7.39, 8.14, 8.85, 9.51, 10.14, 10.74, 11.30, 11.82, 12.32, 12.78, 13.20, 13.60, 13.95, 14.27, 14.54, 14.76, 14.93, 15.03, 15.07, 15.04],
      ], rotation: [
        [0.00, -0.07, -0.14, -0.20, -0.25, -0.31, -0.35, -0.40, -0.43, -0.47, -0.50, -0.53, -0.55, -0.57, -0.58, -0.60, -0.61, -0.61, -0.62, -0.62, -0.61, -0.61, -0.60, -0.59, -0.57, -0.55, -0.53, -0.51],
        [0.00, 21.47, 42.90, 64.31, 85.70, 107.05, 128.39, 149.70, 171.00, 192.27, 213.53, 234.77, 256.00, 277.22, 298.43, 319.62, 340.81, 361.98, 383.15, 404.30, 425.45, 446.60, 467.73, 488.86, 509.98, 531.09, 552.20, 573.29],
        [0.20, 0.21, 0.21, 0.21, 0.20, 0.19, 0.18, 0.16, 0.14, 0.12, 0.10, 0.08, 0.06, 0.03, 0.01, -0.02, -0.05, -0.07, -0.10, -0.13, -0.16, -0.18, -0.21, -0.23, -0.26, -0.28, -0.30, -0.31],
      ]
    },
    tiltRight: {
      translation: [
        [0.00, 0.01, 0.04, 0.09, 0.16, 0.25, 0.37, 0.51, 0.68, 0.87, 1.08, 1.31, 1.57, 1.85, 2.17, 2.51, 2.88, 3.29, 3.74, 4.22, 4.73, 5.28, 5.85, 6.44, 7.05, 7.66, 8.26, 8.86],
        [0.00, -0.01, -0.04, -0.05, -0.05, -0.04, -0.01, 0.03, 0.08, 0.13, 0.17, 0.20, 0.22, 0.22, 0.20, 0.15, 0.07, -0.04, -0.18, -0.36, -0.58, -0.84, -1.14, -1.48, -1.86, -2.27, -2.71, -3.18],
        [0.00, 1.05, 2.07, 3.05, 4.00, 4.91, 5.78, 6.61, 7.39, 8.14, 8.85, 9.51, 10.13, 10.72, 11.26, 11.77, 12.23, 12.64, 13.01, 13.32, 13.57, 13.75, 13.86, 13.89, 13.83, 13.69, 13.46, 13.14],
      ], rotation: [
        [0.00, -0.07, -0.14, -0.20, -0.25, -0.31, -0.36, -0.40, -0.44, -0.48, -0.52, -0.55, -0.58, -0.61, -0.63, -0.66, -0.68, -0.70, -0.72, -0.74, -0.75, -0.76, -0.76, -0.76, -0.75, -0.74, -0.71, -0.68],
        [0.00, 21.47, 42.90, 64.31, 85.70, 107.06, 128.40, 149.72, 171.02, 192.31, 213.58, 234.83, 256.08, 277.31, 298.54, 319.75, 340.96, 362.16, 383.35, 404.54, 425.72, 446.90, 468.06, 489.22, 510.37, 531.50, 552.61, 573.70],
        [-0.20, -0.19, -0.18, -0.18, -0.18, -0.18, -0.18, -0.18, -0.18, -0.17, -0.17, -0.17, -0.16, -0.16, -0.15, -0.14, -0.13, -0.11, -0.09, -0.07, -0.04, -0.00, 0.04, 0.08, 0.13, 0.17, 0.22, 0.26],
      ]
    }
  },
  weak: {
    straight: {
      translation: [
        [0.00, -0.00, -0.00, -0.00, -0.01, -0.01, -0.01, -0.01, -0.02, -0.01, -0.01, 0.01, 0.03, 0.06, 0.09, 0.14, 0.21, 0.29, 0.40, 0.53, 0.70, 0.91, 1.16, 1.46, 1.82, 2.23, 2.68, 3.18],
        [0.00, -0.02, -0.06, -0.11, -0.16, -0.19, -0.22, -0.23, -0.24, -0.24, -0.23, -0.23, -0.23, -0.23, -0.25, -0.27, -0.31, -0.37, -0.44, -0.52, -0.63, -0.76, -0.92, -1.10, -1.33, -1.60, -1.91, -2.27],
        [0.00, 0.95, 1.87, 2.77, 3.64, 4.49, 5.31, 6.11, 6.88, 7.62, 8.34, 9.02, 9.68, 10.32, 10.92, 11.51, 12.08, 12.62, 13.14, 13.65, 14.13, 14.59, 15.01, 15.40, 15.74, 16.02, 16.23, 16.36],
      ], rotation: [
        [0.00, -0.06, -0.11, -0.16, -0.21, -0.26, -0.30, -0.34, -0.38, -0.41, -0.44, -0.47, -0.50, -0.53, -0.55, -0.57, -0.60, -0.62, -0.64, -0.66, -0.68, -0.70, -0.72, -0.74, -0.76, -0.78, -0.79, -0.79],
        [0.00, 21.47, 42.91, 64.34, 85.74, 107.12, 128.48, 149.82, 171.14, 192.45, 213.75, 235.03, 256.30, 277.55, 298.80, 320.03, 341.26, 362.48, 383.69, 404.90, 426.09, 447.29, 468.48, 489.66, 510.85, 532.03, 553.21, 574.38],
        [0.00, 0.01, 0.01, 0.01, 0.01, -0.00, -0.01, -0.02, -0.03, -0.04, -0.05, -0.06, -0.07, -0.08, -0.09, -0.10, -0.11, -0.12, -0.13, -0.14, -0.14, -0.14, -0.13, -0.12, -0.10, -0.08, -0.05, -0.01],
      ]
    },
    tiltLeft: {
      translation: [
        [0.00, -0.01, -0.03, -0.08, -0.15, -0.24, -0.36, -0.50, -0.66, -0.84, -1.04, -1.25, -1.49, -1.74, -2.01, -2.29, -2.59, -2.90, -3.24, -3.59, -3.96, -4.35, -4.76, -5.20, -5.66, -6.15, -6.65, -7.18],
        [0.00, -0.02, -0.07, -0.12, -0.18, -0.23, -0.27, -0.31, -0.33, -0.36, -0.38, -0.40, -0.42, -0.45, -0.48, -0.53, -0.58, -0.65, -0.73, -0.82, -0.93, -1.05, -1.18, -1.33, -1.49, -1.66, -1.86, -2.07],
        [0.00, 0.95, 1.87, 2.77, 3.64, 4.49, 5.31, 6.10, 6.86, 7.60, 8.30, 8.97, 9.62, 10.23, 10.81, 11.37, 11.89, 12.39, 12.86, 13.30, 13.71, 14.09, 14.43, 14.74, 15.00, 15.22, 15.39, 15.50],
      ], rotation: [
        [0.00, -0.06, -0.11, -0.16, -0.21, -0.26, -0.30, -0.34, -0.37, -0.40, -0.43, -0.46, -0.48, -0.50, -0.52, -0.54, -0.55, -0.56, -0.56, -0.57, -0.57, -0.57, -0.57, -0.56, -0.55, -0.54, -0.52, -0.50],
        [0.00, 21.47, 42.91, 64.34, 85.74, 107.11, 128.47, 149.81, 171.13, 192.44, 213.72, 235.00, 256.25, 277.50, 298.73, 319.95, 341.17, 362.37, 383.56, 404.74, 425.91, 447.08, 468.23, 489.38, 510.52, 531.66, 552.78, 573.90],
        [0.20, 0.21, 0.21, 0.20, 0.20, 0.18, 0.17, 0.16, 0.14, 0.12, 0.10, 0.08, 0.05, 0.03, 0.00, -0.02, -0.05, -0.08, -0.11, -0.13, -0.16, -0.19, -0.22, -0.24, -0.27, -0.29, -0.31, -0.34],
      ]
    },
    tiltRight: {
      translation: [
        [0.00, 0.01, 0.03, 0.07, 0.14, 0.22, 0.33, 0.47, 0.62, 0.81, 1.02, 1.25, 1.52, 1.82, 2.14, 2.50, 2.89, 3.32, 3.79, 4.29, 4.83, 5.39, 5.99, 6.60, 7.23, 7.87, 8.51, 9.13],
        [0.00, -0.02, -0.07, -0.12, -0.18, -0.22, -0.26, -0.30, -0.32, -0.35, -0.37, -0.40, -0.43, -0.48, -0.54, -0.62, -0.72, -0.84, -0.99, -1.16, -1.37, -1.61, -1.88, -2.19, -2.53, -2.90, -3.29, -3.71],
        [0.00, 0.95, 1.87, 2.77, 3.64, 4.49, 5.31, 6.10, 6.86, 7.59, 8.29, 8.96, 9.59, 10.19, 10.75, 11.27, 11.75, 12.19, 12.58, 12.91, 13.18, 13.39, 13.53, 13.58, 13.56, 13.46, 13.27, 12.99],
      ], rotation: [
        [0.00, -0.06, -0.11, -0.16, -0.21, -0.26, -0.30, -0.34, -0.38, -0.42, -0.45, -0.49, -0.52, -0.55, -0.58, -0.60, -0.63, -0.65, -0.67, -0.69, -0.70, -0.72, -0.72, -0.72, -0.72, -0.71, -0.69, -0.66],
        [0.00, 21.47, 42.91, 64.34, 85.74, 107.12, 128.48, 149.83, 171.15, 192.47, 213.76, 235.05, 256.32, 277.58, 298.83, 320.07, 341.30, 362.52, 383.74, 404.94, 426.14, 447.34, 468.52, 489.70, 510.86, 532.01, 553.14, 574.25],
        [-0.20, -0.19, -0.19, -0.18, -0.18, -0.18, -0.18, -0.18, -0.18, -0.18, -0.18, -0.18, -0.17, -0.17, -0.16, -0.15, -0.13, -0.12, -0.10, -0.07, -0.04, -0.00, 0.03, 0.08, 0.12, 0.17, 0.21, 0.25],
      ]
    }
  },
};

export function getTrajectory(velocityArray, orientations) {
  const absoluteOrientation = orientations[orientations.length - 1].asArray();
  absoluteOrientation[1] += 0.2;
  const velocityLength = arrayLength(velocityArray);
  const velocityNormalized = normalize(velocityArray);
  // const orientation = absoluteOrientation.map((v, i) => v - referenceOrientationForehand[i]);
  // const alphaAbsolute = Math.atan(absoluteOrientation[1] / absoluteOrientation[0]);
  const orientationVelocity = absoluteOrientation.map((v, i) => v - velocityNormalized[i]);
  // const xAlpha = Math.atan(orientation[1] / orientation[0]);
  const alphaTrj = Math.atan(orientationVelocity[1] / orientationVelocity[0]);
  console.log('velocityLength: ' + velocityLength);
  console.log('absoluteOrientation: ' + absoluteOrientation);
  console.log('velocityNormalized:  ' + velocityNormalized);
  console.log('orientationVelocity:  ' + orientationVelocity);
  console.log('alphaTrj: ' + alphaTrj);
  const trajectoryClass = velocityLength < WEAK_THRESHOLD ? trajectories.weak : trajectories.strong;
  const trajectoryClassName = trajectoryClass === trajectories.weak ? 'weak' : 'strong';
  const trajectoryTiltName = alphaTrj > 0.2 ? 'tiltLeft' : alphaTrj < -0.2 ? 'tiltRight' : 'straight';
  console.log(trajectoryClassName + ' - ' + trajectoryTiltName);
  return trajectoryClass[trajectoryTiltName];
}